 Introduction to reStructuredText   What Topics Are We Covering?     What is reST   Sphinx is a tool that converts reStructuredText source files into various formats.  reStructuredText  (reST) is a readable, unobtrusive, and powerful markup syntax commonly used to build in-line program documentation  or simple web pages.  The plaintext source can be parsed and converted into various form of output such as HTML,  LaTex, and manual pages.  Why use reST   There are many advantages to using reST: Clean and Readable Extensible Define your own custom roles and directives  Powerful Facilities Features extra utilities like admonition (note, caution, danger, tip, important, and etc) Allows the inclusion of footnotes very easily Easy syntax highlighting for codeblocks  Capable of doing everything HTML can and more  Minor disadvantages: Not Widely Known Requires Additional Libraries   Introduction to Toctree   A “TOC tree” is a tree of indivdual TOCs (Table Of Contents) which is reflected on the sidenav.  When you expand  the project, make sure to insert an entry into the toctree of the index file.  Otherwise, your file would not  be accessible to the general public.    The syntax for a toctree is as follows: .. toctree::     :maxdepth: <int>     :caption: <string>       entry_1     entry_2     entry_3   :maxdepth: and :caption: is optional and controls how many levels to show and the title of the toctree  respectively.  It is important to insert a newline before specifying the entries of the toctree.  The name of each  entry is the name of the file you want to include without the file extension.  The title of the file would be  rendered in place of the filename.  Editing reST files   The reST source files are located in the source directory at the root of the project.  Currently the paths to the  project folders in relationship to the root of the git repo are: // Documentation for the Dojo Website  docs/    // Resource materials for the general public  app/resources/   When you first start out, focus on the textual portion and forget about the styling.  Come up with headings and  subheadings that summarize the section.  Mentally mark or physically note the places where you want to insert the  code blocks.  Look for places to insert bullets when possible.  Once you have an overall sense of the resulting  design, proceed to the next section for a quick run through of common reST directives used for formatting.  Basic reST Directives    section for more directives.